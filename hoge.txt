#!/bin/bash

# GitHubリポジトリ情報
REMOTE=origin
OWNER="your-github-username-or-org"
REPO="your-repo-name"
TOKEN="${GITHUB_TOKEN}"

if [ -z "$TOKEN" ]; then
  echo "Error: GitHubトークンが設定されていません。"
  exit 1
fi

# `jq` コマンドが必要
if ! command -v jq &> /dev/null; then
  echo "Error: jq がインストールされていません。"
  exit 1
fi

# リモートの `poc/poc_` ブランチを取得
branches=$(git branch -r | grep "$REMOTE/poc/poc_" | sed "s|$REMOTE/||")

if [ -z "$branches" ]; then
  echo "対象のブランチが見つかりませんでした。"
  exit 1
fi

for branch in $branches; do
  new_branch=$(echo "$branch" | sed 's|poc/poc_|feature_|')

  echo "Fetching $branch..."
  git fetch $REMOTE $branch

  echo "Creating local branch: $new_branch..."
  git checkout -b "$new_branch" "$REMOTE/$branch"

  echo "Pushing to remote: $new_branch..."
  git push -u $REMOTE "$new_branch"

  # GitHub APIで `poc/poc_` ブランチの最新プルリクを取得
  pr_data=$(curl -s -H "Authorization: token $TOKEN" \
    "https://api.github.com/repos/$OWNER/$REPO/pulls?state=closed&head=$OWNER:$branch")

  if [ -z "$pr_data" ] || [ "$(echo "$pr_data" | jq 'length')" -eq 0 ]; then
    echo "元のプルリクエストが見つかりませんでした: $branch"
    continue
  fi

  # 最新のプルリク情報を取得
  pr_number=$(echo "$pr_data" | jq -r '.[0].number')
  pr_title=$(echo "$pr_data" | jq -r '.[0].title')
  pr_body=$(echo "$pr_data" | jq -r '.[0].body // ""')
  pr_base=$(echo "$pr_data" | jq -r '.[0].base.ref')

  # 追加情報を取得
  reviewers=$(curl -s -H "Authorization: token $TOKEN" "https://api.github.com/repos/$OWNER/$REPO/pulls/$pr_number/requested_reviewers" | jq -r '[.users[].login] | join(",")')
  assignees=$(echo "$pr_data" | jq -r '.[0].assignees | map(.login) | join(",")')
  labels=$(echo "$pr_data" | jq -r '.[0].labels | map(.name) | join(",")')
  milestone=$(echo "$pr_data" | jq -r '.[0].milestone.number // empty')

  # プルリクを作成
  pr_create_command="gh pr create --base \"$pr_base\" --head \"$new_branch\" --title \"$pr_title\" --body \"$pr_body\""
  if [ -n "$assignees" ]; then pr_create_command+=" --assignee \"$assignees\""; fi
  if [ -n "$reviewers" ]; then pr_create_command+=" --reviewer \"$reviewers\""; fi
  if [ -n "$labels" ]; then pr_create_command+=" --label \"$labels\""; fi
  if [ -n "$milestone" ]; then pr_create_command+=" --milestone \"$milestone\""; fi

  echo "Executing: $pr_create_command"
  eval "$pr_create_command"

  # GitHub Projects & Epics (GraphQL API)
  graphql_query='{
    repository(owner: "'$OWNER'", name: "'$REPO'") {
      pullRequest(number: '$pr_number') {
        projectCards(first: 10) { nodes { project { id } } }
      }
    }
  }'
  
  project_data=$(curl -s -X POST -H "Authorization: bearer $TOKEN" -H "Content-Type: application/json" \
    -d '{"query": "'"$graphql_query"'"}' "https://api.github.com/graphql")

  projects=$(echo "$project_data" | jq -r '.data.repository.pullRequest.projectCards.nodes[].project.id')

  if [ -n "$projects" ]; then
    for project_id in $projects; do
      gh project item-add "$project_id" --content "$new_branch"
    done
  fi

  echo "Pull Request created for $new_branch!"
done

echo "すべてのブランチの処理が完了しました。"
